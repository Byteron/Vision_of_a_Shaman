#textdomain wesnoth-voas

#ifdef MULTIPLAYER
#define MP_SIDE NUM WML
	[side]
		side={NUM}
		{WML}
	[/side]
#enddef
#else
#define MP_SIDE NUM WML
	[side]
		side={NUM}
		hidden=yes
		controller=null
		allow_player=no
		no_leader=yes
	[/side]
#enddef
#endif

#define VOAS_GOLD EASY NORMAL HARD

#ifdef MULTIPLAYER
	{GOLD {EASY} {NORMAL} {HARD}}
#else
	{GOLD {EASY} {NORMAL} {HARD}}
	[/side]

	[event]
		name=prestart
		
		[gold]
			side=1
			{QUANTITY amount {EASY} {NORMAL} {HARD}}
		[/gold]
	[/event]

	[+side]
#endif

#enddef

#define VOAS_SIDES_WML EASY NORMAL HARD CHAR1_WML CHAR1_SP_WML CHAR2_WML
#ifndef MULTIPLAYER
#endif
	[side]
		side=1
		{PLAYABLE}
		{VOAS_GOLD {EASY} {NORMAL} {HARD}}
#ifndef MULTIPLAYER
		{CHAR1_SP_WML}
#endif
		{CHAR1_WML}
	[/side]

	{MP_SIDE 2 (
		{PLAYABLE}
		{GOLD {EASY} {NORMAL} {HARD}}
		{CHAR2_WML}
	)}
#enddef

#define VOAS_SIDES EASY NORMAL HARD CHAR1_WML CHAR2_WML
	{VOAS_SIDES_WML {EASY} {NORMAL} {HARD} {CHAR1_WML} ( ) {CHAR2_WML}}
#enddef

#define RECALL_LOYALS
	[store_unit]
		variable=loyals
		[filter]
			{FILTER_LOYALS}
			[not]
				canrecruit=yes
			[/not]
			x,y=recall,recall
		[/filter]
	[/store_unit]

	[foreach]
		array=loyals
		[do]
			[recall]
				id=$this_item.id
			[/recall]
		[/do]
	[/foreach]
	{CLEAR_VARIABLE loyals}
#enddef

#define RECALLABLE_UNIT SIDE TYPE
	# Creates a generic unit of TYPE belonging to SIDE, which has a
	# random name, gender and traits (just like a recruited unit).
	[unit]
		side={SIDE}
		type={TYPE}
		generate_name=yes
		random_traits=yes
		random_gender=yes
		upkeep=full
	[/unit]
#enddef

#define PLAYER_TEAM
	team_name=player
	user_team_name= _ "Player"
#enddef
	
#define ENEMY_TEAM
	team_name=enemy
	user_team_name= _ "Enemy"
#enddef

#define PLAYABLE
	unrenamable=yes
	controller=human
	{PLAYER_TEAM}
	persistent=yes
	allow_player=yes
#ifdef MULTIPLAYER
	team_lock=yes
	gold_lock=yes
	income_lock=yes
	faction=Custom
	share_view=yes
#endif
#enddef

#define LAST_BREATH_VARIATION2 ID SPEAKER_1 STRING_1 SPEAKER_2 STRING_2
	#
	#   Here is an example:
	#!  {LAST_BREATH_VARIATION2 Gweod false 
	#!	  Gweod (_"Was it not sharp enough?...")
	#!	  Gweod (_"But... my sword...")}
	#!	  # END OF LAST_BREATH_VARIATION2

	[event]
		name=last breath
		first_time_only=no
		
		[filter]
			id={ID}
		[/filter]

		[set_variable]
			name=last_breath_string
			rand=1,2
		[/set_variable]
		
		# FIRST STRING
		[if]
			[variable]
				name=last_breath_string
				numerical_equals=1
			[/variable] 
			[then]		  
				[message]
					speaker={SPEAKER_1}
					message={STRING_1}
				[/message]
			[/then]
		[/if]
		
		# SECOND STRING
		[if]
			[variable]
				name=last_breath_string
				numerical_equals=2
			[/variable]
			[then]
				[message]
					speaker={SPEAKER_2}
					message={STRING_2}
				[/message]
			[/then]
		[/if]

		{CLEAR_VARIABLE last_breath_string}
	[/event]
#enddef

#define OVERBLEND X Y DELAY UNIT_PLACEMENT_WML

	[hide_unit]
	[/hide_unit]
		
	{FADE_TO_BLACK}
		
	[delay]
		time=200
	[/delay]
	 
	{SCROLL_TO {X} {Y}}
	  
	{FADE_IN}
		
	{UNIT_PLACEMENT_WML}
	   
	[unhide_unit] 
	[/unhide_unit]
	
	[delay]
		time={DELAY}
	[/delay]
#enddef

	# This menu item macro is used for "recruiting" walking corpses, skeletons, and skeleton
	# archers from graves. UNIT is the unit type, UNIT_STRING is similar but has underscores
	# and is used for the id and icon filename. GOLD is the cost (a number).
#define SET_MENU_ITEM_FOR UNIT UNIT_STRING GOLD
	# We need a variable to use in the switch statement:
	[set_variable]
		name=unit_string
		value={UNIT_STRING}
	[/set_variable]
	# The following sentences could be built from the macro arguments, but that might
	# make them impossible to translate properly. So, we use a switch statement instead.
	[switch]
		variable=unit_string
		[case]
			value=walking_corpse
			[set_variable]
				name=description_text
				value= _ "Raise Walking Corpse (8 Gold)"
			[/set_variable]
		[/case]
		[case]
			value=skeleton
			[set_variable]
				name=description_text
				value= _ "Raise Skeleton (15 Gold)"
			[/set_variable]
		[/case]
		[case]
			value=skeleton_archer
			[set_variable]
				name=description_text
				value= _ "Raise Skeleton Archer (14 Gold)"
			[/set_variable]
		[/case]
	[/switch]
	[clear_variable]
		name=unit_string
	[/clear_variable]

	[set_menu_item]
		id=raise_{UNIT_STRING}
		description=$description_text
		image=units/icons/icon-{UNIT_STRING}.png

		[show_if]
			[and]
				# Show if: This is a grave overlay terrain...
				[have_location]
					terrain=*^Gryv
					x,y=$x1,$y1

					# ...within 1 hex of the leader...
					[and]
						[filter]
							id=Agarwaen
						[/filter]
						radius=1
					[/and]
				[/have_location]

				# ...And there is not a unit here already.
				[not]
					[have_unit]
						x,y=$x1,$y1
					[/have_unit]
				[/not]
			[/and]
		[/show_if]

		[command]
			[store_gold]
				side=1
				variable=gold
			[/store_gold]

			[if]
				[variable]
					name=gold
					less_than={GOLD}
				[/variable]
				[then]
					[message]
						speaker=narrator
						image=items/gold-coins-message.png
						message=_ "You don't have enough gold to raise that unit."
					[/message]
				[/then]
				[else]
					[gold]
						side=1
						amount=-{GOLD}
					[/gold]
					# x1 and y1 have to be stored because they can be changed by the
					# player right-clicking again during this command:
					[set_variable]
						name=zombie_x
						value=$x1
					[/set_variable]
					[set_variable]
						name=zombie_y
						value=$y1
					[/set_variable]
					[item]  # Marks the grave as used.
						x,y=$zombie_x,$zombie_y
						image=items/dirt.png
					[/item]
					[delay]  # This makes it a bit animated.
						time=400
					[/delay]
					[unit]
						side=1
						x,y=$zombie_x,$zombie_y
						type={UNIT}
						animate=yes
						moves=0
						attacks_left=0
					[/unit]

					# Remove the overlay that defines this terrain as a grave:
					[terrain]
						terrain=''
						layer=overlay
						x,y=$zombie_x,$zombie_y
					[/terrain]
					[clear_variable]
						name=zombie_x,zombie_y
					[/clear_variable]
				[/else]
			[/if]
		[/command]
	[/set_menu_item]
#enddef

#define OBJ_BOW_ARCANE X Y ID

	[event]
		name=moveto

		[filter]
			side=1
			x={X}
			y={Y}
		[/filter]

		[message]
			speaker=narrator
			image="wesnoth-icon.png"
			message= _ "A shiny bow is placed in the middle of the elvish castle hall."
		[/message]
		{PLACE_IMAGE items/elvish-bow.png ({X}) ({Y})}
		{VARIABLE bow_taken 0}
		[event]
			name=victory
			{CLEAR_VARIABLE bow_taken}
		[/event]
	[/event]
	
	[event]
		name=moveto
		first_time_only=no
		[filter]
			side=1
			x={X}
			y={Y}
		[/filter]
		[if]
			[variable]
				name=bow_taken
				numerical_equals=0
			[/variable]
			[then]
				[message]
					speaker=narrator
					image="wesnoth-icon.png"
					message= _ "Should $unit.name| attempt to pick up the bow?"
					[option]
						label= _ "Yes"
						[command]
							[object]
								id={ID}
								name= _ "Arcane Bow"
								image=attacks/bow-elven-magic.png
								duration=forever
								# wmllint: local spelling forgemasters
								# description= _ ""
								cannot_use_message= _ "Only a true archer can hold this bow"
								[filter]
									type=Thelian Hunter, Thelian Deerstalker, Thelian Nimrod
									x,y={X},{Y}
								[/filter]
								[then]
									[remove_item]
										x,y={X},{Y}
									[/remove_item]
									[message]
										speaker=$unit.id|
										image="wesnoth-icon.png"
										caption=""
										message= _ "As $unit.name| takes the bow."
									[/message]
									{VARIABLE bow_taken 1}
								[/then]
								[effect]
									apply_to=attack
									name=bow
									set_description= _ "arcane bow"
									set_icon=attacks/bow-elven-magic.png
									set_type=arcane
									[set_specials]
										{WEAPON_SPECIAL_MAGICAL}
									[/set_specials]
									increase_damage=25%
								[/effect]
							[/object]
						[/command]
					[/option]

					[option]
						label= _ "No"

						[command]
							[allow_undo]
							[/allow_undo]
						[/command]
					[/option]
				[/message]
			[/then]

			[else]
				[allow_undo]
				[/allow_undo]
			[/else]
		[/if]
	[/event]
#enddef